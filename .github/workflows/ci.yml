name: Build and Deploy

on:
  push:
    branches:
      - main
env:
    GCE_key: ${{ secrets.GCE_key }}
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        run: |
          #echo "export GCE_PROJECT_NAME=ab-project-2190" >> $GITHUB_ENV

          # Debugging: Print the value of GCE_PROJECT_NAME
          echo "GCE_PROJECT_NAME: $GCE_PROJECT_NAME"

          # Install Google Cloud SDK
          curl -sSL https://sdk.cloud.google.com | bash
          source $HOME/google-cloud-sdk/path.bash.inc

          # Configure Google Cloud SDK with the Service Account Key
          echo $GCE_key | gcloud auth activate-service-account --key-file=-
          export GCE_PROJECT_NAME=ab-project-2190
          gcloud --quiet config set project $GCE_PROJECT_NAME
          gcloud --quiet auth configure-docker us-central1-docker.pkg.dev

      - name: List Google Cloud Configurations
        run: gcloud config list

      - name: Build and Tag Docker Image
        run: |
          docker build -t us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:${{ github.sha }} .
          docker tag us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:${{ github.sha }} us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:latest2

      # - name: Authenticate Docker to Use Artifact Registry
      #   run: |
      #     gcloud auth configure-docker us-central1-docker.pkg.dev

      # - name: Push Docker Image to Artifact Registry
      #   run: |
      #     docker push us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:${{ github.sha }}
      #     docker push us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:latest1

      # - name: Deploy to Google Cloud Run
      #   run: |
      #     gcloud run deploy simple-html-server \
      #       --image us-central1-docker.pkg.dev/ab-project-2190/my-image/simple-html-server:latest1 \
      #       --platform managed \
      #       --port 80 \
      #       --region us-central1 \
      #       --allow-unauthenticated
